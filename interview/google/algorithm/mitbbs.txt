http://www.mitbbs.com/article_t/JobHunting/32622081.html
一轮店面
第一题判断一个string的开头第一个字母是不是大写，两行代码就能写完，没有任何陷
阱。第二题让我用Java（因为我本来用python）写判断binary tree是不是bst。两个题
都很简单，然后还让我说一下自己做过的最challenging的一个project，整个面试不到
二十分钟就说问完了问我还有没有问题，我连忙问他为什么这么快是不是我什么地方做
错了他不愿继续问下去。答曰他在G工作七年多面了不下一百人，十分清楚哪些人去
onsite不是在浪费他们engineer的时间，觉得我没有问题。。。

过了一周果然hr说去onsite，由于我所在的城市有G的office，所以去那里面，早上三
轮然后吃午餐，下午再两轮，一共五轮

第一轮
给一个矩阵，每个格子上有三种可能，空房，阻碍物或者是保安，阻碍物不能进，空房
四个方向都能进，要写代码给每个空房标记其离最近的保安的距离，比如

000
BGG
B00

B表示障碍物，G表示保安，0表示空房，应该标记为

211
BGG
B11

我说扫一遍矩阵，然后遇到每个G就bfs整个矩阵, 他说不是optimal，optimal可以做到
O(N^2)。当时想不出，他说那就先按我那个想法写代码。写完就到时间了。后来回家后
就想到optimal的解法了，对所有G一起开始bfs就可以了。

第二轮
写一个函数生成满足下面三个条件的integer
1. 非负
2. 不能有重复数字
3. 递增，既后面产生的比前面产生的要大

我问要一次性全部生成所有数字还是每呼叫一次函数产生一个，他让我先写一次性产生
全部的，这个不难，backtracking，follow up是假设现在给一个符合条件的数字，如
789，返回下一个（比输入大但是最小的）数字，790。一开始我没思路，说很多edge 
case，然后多观察几个例子后发现有些规律，说出来后他说看起来不错，然后举了几个
例子让我模拟跑一遍，没有问题，他说ok，不用写code了，正好也到时间了

第三轮
问了一个Java的问题
假设有两个class，A和B，B是A的子类，
先有下面几句
A a = new A();
B b = new B();
List<A> la = new List<A>();
List<B> lb = new List<B>();
（反正就是建了A，B的各一个instance，list of A 和 list of B 各一个instance）
然后问下面四句哪句能过compiler，哪句不能：
a = b;
b = a;
la = lb;
lb = la;

答案是只有第一句能过，我一开始答1和3能过（我真心不熟Java，python里面的话啥能
过啊亲）。

然后出了一道python generator的题，写代码，还有follow up，也要写代码，最后都
超出时间了。

中午吃饭, 下午接着面

第四轮
问我知不知道zip文件，我说用过但不知原理。他就说我们来讨论一下

假设一个文件压缩后的表示是

#3, #5, #6, 2 5, #8...

”#k“形式的代表这个数字k，两个数字“i j”形式的代表取前 i 个
数字做 j 长的 circular重复，像上面那个表示，前面3个都是表示单个数字，
然后 2 5表示取前2个数字 （既56），组成5个数字，不够的从头再取，所以就是56565
最后上面解压缩后应该为
3, 5, 6, 5, 6, 5, 6, 5, 8...

要我写的是压缩算法的代码。
我提出从头扫，一边一边用hashtable记下见过的number，每前进一位就检查hashtable
有没有符合当前数字模式的number出现过，然后他说还不错，写代码。一边写一边出现
bug，一边发现很多写代码前没考虑的东西，最后勉强算写完，时间也到了，他说这个
他也没写过，是在一篇paper上看到的算法，原算法跟我的有些不同，倒是都用了
hashtable。。。

第五轮
拿着我简历进来，说有人跟你谈过你的简历吗，我说没有，他表示万分惊讶，然后在我
简历上挑了一个research project让我说说，说完后用c++出了一个题，一个cipher类
，有一个member function是对输入加密，加密方法为对input的每16个Byte和一个
increasing counter做xor，这个increasing counter也是有16Byte，从00..01（前
15Byte都是0，最后1Byte是1）开始，还有一个要求，举例说：
第一个input 有20个Byte，前16个Byte就和00..01做xor，后4个Byte和00..02的前
4Byte做xor
然后之后再对第二个input加密的时候，对这个input的前12Byte用00..02的后12Byte（
即11个Byte 0，1个Byte 1）

然后让我写这个class

我问了一句要是couter的数用完了怎么办，他反问我这个counter有16Byte，多久会用
完。因为已经很累了，算错了好几次，中途我还说16乘以8等于64。。。反正在他逼迫
下我硬着头皮模拟算了一下，得出结果就是很久很久很久才会用完，不用担心。然后又
因为好久没写c或c++，还有真的很累，脑袋一片发麻，茫然不知如何下手，他看不下去
了就说那你就写一个能从小到大生成这个counter能表示的所有integer的函数吧，你要
对python熟一点的话就用Python，这个写完后有两个小bug，迅速改正过来，然后就到
时间了。问我还有没有问题，我就随便问了一下这个office有哪些project，然后就结
束了。
http://www.mitbbs.com/article_t/JobHunting/33106617.html
1. Integral image 
2. 一条线段长度L，雨滴直径D，雨滴从不同位置等概率下降到线段上，模拟一下这个
情况，求出多少雨滴可以把线段覆盖完全
3. 一个file里面有很多alarm，每个alarm有三个数值：起始时间、终止时间、优先度
。把那些从没成为过最高优先度的alarm删除。
4. rotate array by k steps（leetcode），要最优解：reverse不能用
5. （1）俄罗斯方块，求出正在下落的物体和底部的最短距离。 （2）一幅图有一系列
二维的点，判断此图是否对程
http://www.mitbbs.com/article_t/JobHunting/33124223.html
1. 一个背包有特定容量，和一些物品，每种物品所占空间不同，所代表的价值不同。
输入是背包容量 和 物品list，要求背包能装的最大的物品价值。
2. 给一串数字，和一个target，找两个数字，要求这两个数字的差最接近target。
3. 设计一个n乘n矩阵，有setValue, getRowSum和getMatrixSum. 
4. 类似Path Sum和Path Sum II。
5. 找出两个不同字符的最长的连续字串。打印出所有的解。"yellow" => [ell, llo]
http://www.mitbbs.com/article_t/JobHunting/33125797.html
Given a list which can can contain elements as well as lists, write an 
iterator to flatten a nested list. 
http://www.mitbbs.com/article_t/JobHunting/33111815.html
老中面试官，问了个这个题目：

Find all connected components in an undirected graph.
http://www.mitbbs.com/article_t/JobHunting/33135083.html
给一个directed graph，要求打印出所有的环。
不知道我的Java code可行吗? 我用DFS traverse, 同时记住现在的path, 当侦测到
back edge时, 就打印出path中的cycle部分。
http://www.mitbbs.com/article_t/JobHunting/33135799.html
G
电面，Leetcode 318 变形，返回所有满足条件的组合
Onsite1, 超nice国人大哥，recruiter一走就开始中文沟通，说就问一题就好. 输入一
个m * n grid 和若干个king坐标，规定king 周围一圈不能走，返回有没有路径从（0
，0）走到（m-1, n-1）
Onsite2, 白人小哥，先问给个有序数组找所有majority element，majority element
定义是出现次数超过1/4. 告知见过了并且给出解法. 小哥说好那我们换个题，纠结一
阵说咱们写个贪吃蛇吧。连说带写肺都疼了。
Onsite3 设计，另一个超nice国人大哥，超帮忙，来一个Leetcode LRU. 话说用
Objective-C写还挺蛋疼的.
Onsite4 另一轮设计，白人小哥，让设计iOS UndoManager 我说我没用过他说没事我给
你解释. 
Onsite5 迟到印度小哥，第一题游程编码，输入编码后的字符串，写一个 iterator，
实现hasnext 返回还有没有数字，next返回编码前的数字。输入有可能含有非法的编码
。 比如 输入2103 那么编码前字符串应该是 11   第一次调用next返回1 第二次调用
next 返回1
第二题 选票统计，用一个structure <time, name> 表示某个时间time有一张选票投给
name，让统计某个时间点之前的winner，followup 某个时间点之前票数领先的前N个人.

老幸运了G家题都不难，还有两位国人大哥超给力，大大的一个赞！
http://www.mitbbs.com/article_t/JobHunting/33147013.html
1. 老白
求一个数的因子 比如24 因子是 2，3，4，6，8，12
这道题是最可惜的，一开始太紧张，有点懵，没有直接想到可以把24化成几个素数来求
解。而是用了一个递归的办法，写到一半才想到可以用别的办法，而且代码还有一个
bug，就是2，3的因子数是空集，如果输入是 n = 6的话，如何处理。写完递归以后，
老白又让写了化成素数的解法。然后老白问n＝32 和 n=35两种情况下，哪个计算量会
少一点

2. 烙印

给定两个字符串 abczde abcde ，他们的差别在于第一个字符串插入了一个z，然后问
题就是如何找到那个z。

我提了两个方法。 方法1: 每一个字符比较，找到了不同的字符，就比较和后面的字符
以确定哪个字符是插入字符。
方法2: 使用hashmap

然后烙印深入问了方法1，有哪些特殊情况。 我说 1. 如果一个字符串是空。 2.插入
字符是长字符里的最后一个元素。 然后他说还有一种特殊情况，插入字符是长字符里
的倒数第二个元素

然后烙印说假设有一个函数，宣称可以使用比O(n)更好的办法解决这个问题，问如何测
试这个函数是否正确。我说了可以输入aaaaabaaaa, aaaaaaaaa。然后他说b的位置如何
确定，我说randomize.

接着烙印说在特殊的情况下，比如ababacbabab, ababababab, 没有连续两个字符相同
，如何提高效率。我说使用binary search. 写了代码。

烙印接着问如果使用hashmap, 描述一下java是如何实现hashmap的。然后问如何有效的
扫描hashmap里的keys. 我说可以增加一个linked list去记录keys.

面试完，想想用XOR也是可以做的。

3. lunch

4. 讨论了dissertation. 准备的东西只讲了一半时间就到了。那白人哥们还真看了论
文。

5. 中国大哥

中国大哥很nice。 非常感谢。
第一道题是测试一个n*n里每一行，每一列，两个对角线的元素之和是否相等。然后问
了测试例子，举了一个正常的返回true的例子，返回false的例子。一个空集. 
但是忘了测试如果这不是一个n*n的例子。

第二道题是leetcode上Paint Fence的变形题。做完以后大哥问是不是见过。

6. 中国小哥

系统设计: 给定一个很大byte stream在disk里，如何排序

我开始没有注意到是byte stream,就是讲了常规的merge sort. 后来补充了使用
counting sort. 然后又问了如果有多个处理器，如何加快计算。
我说就是每个处理器维护一个array来进行counting sort.

设计一个iterator来进行树的post order traversal

总结
0. 自己功夫没有到家。
1. leetcode是有用的
2. 最近一两个月花了很多时间看system design, 码有点生，策略不对。还是要以写码
为主。
3. 白板写码真的是和电脑写码不一样，完全两种体验，一定要另外练习。我以后要多
在纸上写写才行。
4. 对于easy medium的题目，一定要多想想test case, corner case.
http://www.mitbbs.com/article_t/JobHunting/33010083.html
内部哥们强推，跳过phone

onsite
1. card shuffler：shuffle的程序是一个简单的array，array里的值代表当前位置卡
片的下一个位置 
e.g 当前卡片位置ABCDE shuffle array是01234的话下个卡片位置还是ABCDE，43210的
话下个卡片位置是EDCBA。
问给定一个shuffle array，不断用这个array去shuffle，能否得到最初的card deck，
能得话要多少次。 
吐槽下，面试官是个三哥，全程非常严肃／黑脸，我说句话就用小本子记下搞得我很紧
张。我说用java写可以吗，曰可以，刚写了两行问我add是啥意思，不知道是想考我基
础知识还是不懂java。

2. 给定一个binary search tree，返回range内所有key，key可以有重复。 
版上出现了多次的把一个数拆成任意个平方和的最小拆法。
面试官是中年国人大叔，除了告诉我题目是啥就在电脑上自顾自工作，问话要问两遍才
有反应。写完说我程序有问题，查了半天查不出bug，然后指出我漏了个尖括号，跪了
。。

3. 版上出现多次的longest consecutive sequence in tree 
follow up 如何加速，memory放不下怎么办。
国人小哥比较nice，但是只要我不和他主动说话绝不主动和我说话，因为前两场心情略
糟糕写完题目在白板前发呆，哥们就望着我啥也不说，尴尬。。当然也不怪他我自己比
较紧张，回家发现有很弱智的bug但小哥没提不知道怎么回事，可能放我水了

4. 设计个用bit形式表示时间（小时：分钟）的clock，
e.g 10:15可以写作1010:1111，每个bit是一个小灯泡，打印所有有且仅有n盏灯亮着的
时间，
e.g. n＝0就只有0:0一种可能。

面试官是亚裔年轻mm，话不多人很cool，但是思路清晰会引导面试者，感觉碰到懂得引
导面试者或冷漠面试官对面试人表现会有很大影响，真的是看运气了。

5.算法游戏，给一个只有＋－两种字符的array，两个玩家，轮到某个玩家他可以任选
两个连续的－－将他们变成＋＋，如果某个玩家发现自己无法行动则赢得游戏，要求写
isWin（String s）判断先行动的玩家能否赢。
followup 如何优化，时间上和空间上。
面试官是做android前端的白人mm，非常活泼健谈，一路聊天愉快，面完就感觉她会给
强推。
http://www.mitbbs.com/article_t/JobHunting/33152857.html
input是一个2D的整数矩阵，output是一个满足下面要求的矩阵：
1. 矩阵每一行从左到右递增(含相等)、每一列从上到下依次递增(含相等)
2. 矩阵每一行不能出现相同的数字

举例：
如果input是
    1 3 4
    2 3 5
那么output可以是：
    1 3 4
    2 3 5
或者
    1 2 3
    3 4 5
或者
    1 3 4
    2 3 5
等任何一种

一种行得通的做法是先将所有元素加到Heap里面，然后一列一列地填，每一列都按从上
往下的顺序填。但这个复杂度是N * lg N，这里N是矩阵的元素个数。

有更优的方法吗？
http://www.mitbbs.com/article_t/JobHunting/33106617.html
1. Integral image 
2. 一条线段长度L，雨滴直径D，雨滴从不同位置等概率下降到线段上，模拟一下这个
情况，求出多少雨滴可以把线段覆盖完全
3. 一个file里面有很多alarm，每个alarm有三个数值：起始时间、终止时间、优先度
。把那些从没成为过最高优先度的alarm删除。
4. rotate array by k steps（leetcode），要最优解：reverse不能用
5. （1）俄罗斯方块，求出正在下落的物体和底部的最短距离。 （2）一幅图有一系列
二维的点，判断此图是否对程
http://www.mitbbs.com/article_t/JobHunting/32984309.html
面试准备：
========
F家的算法：
----------------
    1. F家的题基本上都是Leetcode 的原题和变种。把leetcode的题研究透就OK了。
    2. 跟F家的HR 聊过， 如果你想拿到面试官的strong recommendation, 需要在一
轮面试中做完两道题。每题15-17分钟完成，包括和面试官讨论，写代码，以及写test 
case 的时间， 同时尽量bug free， 不一定要optimal solution。 
    3. 时间很紧，所以要多练习白板码，多练习在白板上跑test case。写多了就会发
现，白板码上写出bug的概率比用电脑写低很多， 因为白板上可以通过图表的形式很直
观的跑test case， 很容易发现bug。
    4. 面试的时候，自己带fine tip marker， 比粗的笔写代码快很多。

G家的算法：
--------------
    1. G家的题库很大，而且经常换新题，我面试的时候一道都没有见过，所以刷题用
处不大。
       G家的题基本上都是经典算法的变种。如果对经典算法很熟练，面试的时候很快
就可以想到解法。
   2. 复习经典算法，推荐看一下Sedgewick 教授的算法书。http://algs4.cs.princeton.edu/home/
        相比算法导论，我更推荐这本书，因为这本书的算法是用Java而不是伪代码实
现的，而且代码写的非常简洁而优雅。
        Sedgewick教授的书里没有 DP专门的章节，看看算法导论作为补充。
    3. G家喜欢考各种tree：prefix tree，augmented binary search tree (with 
rank and select APIs), segment tree，binary index tree （1D and 2D), 
interval tree, kd tree, quad tree. 
    4. G家喜欢考几何题，推荐：
           topcoder的教程：http://help.topcoder.com/data-science/competing-in-algorithm-challenges/algorithm-tutorials/
           Sedgwick的介绍几何算法（sweep line之类）的video：https://www.
youtube.com/watch?v=Igr6yONkpIQ
    5. G家关于设计棋类游戏的AI的题，基本上都可以用MinMax 算法解决: http://neverstopbuilding.com/minimax
    6. G家和F家都会考 Thread-Safe data structure和 Threading Pool，推荐阅读C
++ concurrency in action的第六章和第九章 http://www.manning.com/williams/

系统设计：
     1. 我基本没有web development的经验。和我一样0经验的同学可以先上一门课，
推荐Reddit Cofounder 开的web development
的课( 讲义和课程project都非常好）：https://www.udacity.com/course/viewer#!/c
-cs253/ 
     2. 对于distributed system不了解的同学，推荐coursera上的Cloud Computing 
Concept：https://www.coursera.org/course/cloudcomputing
     3. 系统设计里边，最重要的部分是Data Storage和Data processing。
         Data storage包含：
              a. Distributed File System: 推荐看一下GFS的paper和FB Haystack 
Photo storage的paper
              b. NoSQL Data storage: 推荐看一下Big Table的paper，了解一下
Cassandra 的架构：Cloud Computing Concept的课有讲
              c. Memcache
         Data processing：
              看一下Map-Reduce的paper。了解一下Map-Reduce能解决什么问题。如
何做job scheduling等等。

     4. 板上大牛收集的题库：https://www.evernote.com/shard/s21/sh/c2035c38-
1a80-4fd4-8c93-8ca0ad9ffb48/35079ac1bf5ae3ea
         大多数题，解题的时候，按三步走：
               a. 如果数据量小，如何在单机上实现。
               b. 如果数据量大，如何sharding data，如何实现scalability
               c. Fault tolerance，考虑有node failure和message loss的时候这
么处理。
    

最后，祝大家都有好offer。
http://www.mitbbs.com/article_t/JobHunting/33012223.html
1.一个字符串，从字典查出字符串所有单词，然后怎么提升效率,比如输入
whoisbillgates,返回['who', 'is','bill','gates']
2.N*N的矩阵，M个朋友随机住在矩阵上，求聚会地点，满足所有朋友总路程最短, lg复
杂度
3.树里的所有duplicated子树，O（n)遍历一次
4.BST，给定一个数值，返回BST中最接近的节点， lg n
5.Minus one
6.一个整数链表，返回最长连续数字长度 o(n)， 例如输入[10,6,2,15,5,9,1,3,100,4
],返回6，因为1-6是连续的
7.一个矩阵，矩阵中节点为一个二元组，如果当前节点为M[a][b] =(x,y),下一个访问
节点为M[a+x][b+y],求从一点出发是否可以遍历矩阵
8.判断任意两个人是否有血缘关系，自己定义person类
http://www.mitbbs.com/article_t/JobHunting/32992983.html
1. find all rotation symmetric numbers less than N digits,  16891 -> 16891, 
2. give integer, 12345, 返回 32154
    give a target  string and list of strings, find the longest string that 
has target as prefix, follow up, stream of target string, 用trie，每个节点保
留最长string信息。
3. integer array add one
    rotation abc->bcd->cde, give a list of strings, group them if them are 
rotations.
居然给我laptop，然后直接上面写，然后debug通过，给test case通过

4. given grid of colors, coordinate of a point and its color, find the 
perimeter of the region that has the same color of that point.
    print all morse code given the length constraints, short “*” takes one
, long “——“takes two. (find a bug in the code) 就是排列组合的典型题
5. design: chromecast, how to know which app can be supported? There is a 
cloud that can give the information to the chrome cast, appID, deviceID, 
cache design. 
http://www.mitbbs.com/article_t/JobHunting/32322891.html
面了四个人.

http://www.mitbbs.com/article_t/JobHunting/33081267.html

比如一个二维的 image, 里面的 pixel是 白或者黑,  若果所有的pixel是黑
那么这个 image就是黑(B)的，如果所有的pixel 是白(W)的，那么这个 image就是白的。
否则的话，需要把这个 image等分成四份，如下图

__________                     __________
|        |   等分成四份就变成  |    |   |   
|        |                     |____|___|   
|        |                     |    |   |
|________|                     |____|___|

分成四份以后每个小份就是一个  sub-quadtree

问题1 : 为这个 quadtree里面的 node 设计 data structure

然后的问题是关于两个 quadtree 的 intersection, 有两个 quadtree, 它们描述的 
image 是两个相同的 area
比如 都是 [0 1] x [0 1] 这个相同的二维区域的image.

问题二: 写一个函数，返回两个 quadtree的intersection,

这个intersection的规则是: 如果一个区域在 第一个quadtree 里面是
白的，这个相同的区域在 第二个 quadtree里面是黑的，那么intersection
就是白的，简单的说白是 0, 黑是 1, intersection就是两个bit 的 AND


第二个人:  

问题 1:    construct binary search tree from a sorted array ( leet code 的原
题)
问题 2:    storm8的 online test 的升级版。

           一个 m x n 二维区域，每个点上有一定数量的钱，考虑路径 : 从坐下角
           (m-1, 0)出发，终点是 右上角(0, n-1), 在每个点只能向右或者向上走，
           现在有两个人，从起点出发，走到终点，问怎么样求出这两个人能拿到
           的钱的和的最大值

           一看这个就傻了.  两个人的，太难了。 面试官让我先算一个人的算法，
这个
           easy.

           然后他就问两个人怎么搞，我当时首先想到的是，会不会是 greedy, 先算
           第一个人的，然后把第一个人走过的路径上的每个点上的钱变成0,再算第
二个
           人的。我当时试图证明这个 greedy是正确的，但也证明不出来。 

          面试官说你能举出一个反例证明你的 greedy 不 work也行，我当时就试了试
          1   2   3
          4   5   6
          7   8   9

         跑了一下 greedy的算法。 但是这个似乎不能做为一个反例。
  
         时间到之前没想出反例.

第三个人:

问题1 :   binary search.  我问他 如果 target  miss/hit 怎么处理，他说 you 
told 
          me.  我就说  比如  1  2  2  4, target = 3, 那么应该返回  index 3, 
如果          target 是  2, 就应该返回 index 2. 他说 OK。 然后我写了，他亲自
跑了一个
          test case

问题2 :  写一个 hashtabe, 实现两个方法 find， insert


第四个人:

问题1  ： google的 search bar 里面敲入  一些字母的时候， 会出来一些提示，问
怎么
          实现，我说用 prefix tree.  然后就问， 比如 输入 ca, 出来的可能是 
cat, 
          california, 问有什么方法可以加快 search, 可不可以提前 search, 我说
可以
           提前 search cat 和 california, 等到用户确定是什么的时候，再输出相
应的
          search的结果， 这样会快一点。

问题2 :    一个服务器上有一个很大的  integer array  A, 客户端会 每次通过 两
个 
           index start, end， 来拿到 A[start, ..., end] 这个 sub array 上的 
           minimum, 如何在服务器上实现快速的找出 A[start,  ..., end] 的最小
值.

http://www.mitbbs.com/article_t/JobHunting/33111683.html
1. 一段话，里面有几个关键词可以被替换成别的词，比如 $Foo 可以换成任意的词，
设计class搞这个。
2. 一道图的题，打印出所有的环。
3. 有很多个sorted queue存在不同服务器上，如何有效的读取到一个 sorted 大queue里
4. 在一个2d数组里，打印出某一块矩形所框范围内的所有值的和。
5. 2d数组里走格子，给你A点位置，有的格子不能走（石头）有的能走，问最短路径从
A到B.
http://www.mitbbs.com/article_t/JobHunting/32928985.html
google安排了两轮电话面试

第一轮是个三姐，LC上的insert interval类似的题，之后各种讨论follow up


第二轮是个美国人，问题是给你一个sorted的长度为N的数组，求所有数组内出现次数
超过N/4次的数字（popular numbers）
我写出了O（N） time O（1）Space，之后面试官问我有没有更好的解法了，我说我想
不出来了
接着问了一道followup， 现在给你一个time complextity O（1）的function， 叫做
findCandidates（A）， return的结果是一个长度为3的数组，popular numbers是这个
数组的一个子集，问如果用这个function，能否改进time complexity。
这道题我写的时候出了个index out of range 的bug，被面试官指出，马上改过来。
最后讨论了如何test我写的这个function

一天后拿到onsite。
http://www.mitbbs.com/article_t/JobHunting/32933923.html
1. Wildcard match
2. http://www.fgdsb.com/2015/01/25/peek-iterator/类似。写一个de duplicator,wrap 几个stream，输出的stream全是不重复数字。
3. 求一个stream，出现次数最多的数字。然后扩展到N个machine的情况。
4. 假设某个company在不同国家都有office，每个国家的office，如果是当地的假期，
就可以放假了。假设可以查询任意航班的信息，每个星期只能呆在一个地方，只有周末
的时候才能飞去别的国家。找一个放假天数最多的schedule。
5. LRU + 一些 C++问题。
6. 这题记不大清楚了。好像是Longest increasing consecutive sequence， 然后一
个Tree的该进版。求longest increasing consecutive path。
7. file system design。就是设计一个大数据的存取问题。存在disk上。我就是
partition + hash + cache那一套糊弄过去了。
http://www.mitbbs.com/article_t/JobHunting/32917451.html
楼主onsite归来。。。update一下
面了5轮 挂了1轮 估计就是挂在中国小哥手上了。。。
面试的整体体验不好 觉得G家dont give a shit about who you are 很多人基本不介
绍自己也不问你也不看简历 直接就开始做题。。。

第一轮 chromcast组的美国大叔 我忘了问了什么了。。。忘了。。。 反正就做了一个
题 问了很多如
何优化啊 followup之类的 我答题的时候他在写email 。。。最终只问了一道题 但是
从头至尾相谈甚欢 觉得应该没什么大问题



第二轮 一个中国小哥 题目是给定一个 2^n x 2^n - 1的board，它的某个角（可以是
任意角）有一个缺口 然后你有一块L形的积木（积木占三个格子 比如在二维矩阵里面[
1,0], [0,0], [0,1]三个点连起来就是一个L行的积木 积木可以任意翻转）
问题是：对于给定的任意n 写一个函数 打印出来能够用（任意个）L积木填满这个
board的办法

中国小哥自己的英语表述也不太好 题目说的不是很清楚 花了10几分钟弄清题意 然后
我问他这个题目的输入应该是什么形式 是不是(n, 缺口坐标)这样的 结果他说他也不
知道（！）让我自己想 那我说我就直接输入n 然后我假设缺口是在[n-1, n-1]的位置 
他说ok （结果后面写到一半（其实没写出来代码）他又问我为什么我的函数定义里面
没有给缺口的坐标（！）） 

这题一开始根本就没看出来trick在哪里 我在白板上画了n=2都看不出来如何用那个L来
fill这个n=2的board 然后我觉得可能没有trick 我说能不能brute force，他说不行 
太慢了。然后又磨蹭了10分钟 我实在是放弃了 然后让他把n=2的解画出来了 然后我自
己又画了一下n=3 才发现这玩意有一个固定的pattern（！！！） 可以递归解 但是每
次递归要拆成四个子问题 每个子问题的缺口的坐标都不同（！） 这个时候大概只剩几
分钟了 我开始写伪码 但是四个子问题加上要算每个子问题的缺口的坐标 一着急也基
本上没写出来

然后这位中国小哥给我good luck了一下 也没拍照 就走了 当时就心想你要是个三哥我
肯定认定你是要黑我了 你是中国人我觉得再怎么样你也不能黑我吧 不过从面试结果来
看应该也是挂在这一轮了 中国人面中国人为毛就不能出个two sum？two sum太简单就
不能出个plus one? LRU? Gas Station? ... 




第三轮 美国小哥 。。。 一开始准备问大数加一 我说我电面做的就是这一题 小哥一
下子慌了 想了一下 问了一个用bit的题 先跟小哥一起温习了一下bit的操作 然后理解
了一下题意 然后相谈甚欢的把题目写完了 时间也到了 没有第二个问题 看他的
样子题目是现想得。。应该没准备两个题 这轮应该也没什么问题 小哥最后也说了对
implementation满意

题目是给定一个输入 ([x, y], n) 在屏幕上画出起点为[x,y] 长度为n bit的横线 屏
幕的表示是一个2D矩阵 矩阵的每个元素是一个8bit的数字




午饭




第四轮 俄罗斯小哥 LRU cache 一边看我写代码一边问问题 写好了之后问了一下读写
锁的概念 相谈甚欢也不觉得这一轮有什么问题 。。。



第五轮 美国小哥 两个题
打印sum value of a tree，直接说了没有trick就是warm up BFS几分钟就秒掉了
打印第n个gray code，他在黑板上写了格雷码的规则 我在白板上推演了一下之后写了
代码 囧的是他自己看代码的时候off by one了。。 两题做完大概还有15分钟 相谈甚
欢的聊了一下 也不觉得这一轮有什么问题。。。
http://www.mitbbs.com/article_t/JobHunting/32938581.html
G之前说了，只加了两轮Design。

一个是关于一个cache的设计，要考虑如何设计存储结构，cache如何刷新等。
一个是实现AD server，即根据网页的URL显示相关的广告，如何scale。
感觉有的时候比较难搞清楚面试官关注的是哪一方面，需要少做假设，多问。


F有三轮coding，一轮design，一轮behavior。coding基本是leetcode的原题或变种，
类似于2sum， 3sum，两个指针往中间移，二分查找，dfs这种，说实话我自前年面过G
之后没太多专注刷题，面试前还在hack一个游戏，只有空温习了几道，碰上的题都比较
基础，两个指针中间移的时候还费了不少劲。

design偏向设计存储结构

behavior问题很多，包括以前的成就，怎么说服别人做design的修改，说服不通怎么办。
http://www.mitbbs.com/article_t/JobHunting/32939573.html
估计挂了, 就贴一下

问了两道题

第一题 
merge  n sorted list. 我用heap做,比较容易.

第二题
题目弄了半天大概搞清楚意思, 但是没做出来. 大家出来看一下怎么做.

有一个lock, 比如说1234

假设你要解锁, 你要尝试所有的combination来解锁, 怎么把这所有的combination存在
一个sequence里面使得sequence最短.

比如说锁只能是 0 1 2 组成的数字 

锁是 1

012

锁是 12

sequence 可以是
000102101112202122
代表
00 01 02 10 11 12 20 21 22


也可以是, 如果你连着读的话
0011022120

可以代表
00 
01 
  11
   10
    02
     22
      21
        12
          20

我觉得是怎么压缩这些candidate key到一个string里面
http://www.mitbbs.com/article_t/JobHunting/32948909.html
电面1：
顺序统计树，找第K个节点。

电面2：
1）打印000到123所有的数，follow up，打印a到b所有的数（假设每一位都a<=b）
2）Next permutation
3）栅栏N个木片，每一片可以刷两种颜色，相临三片不能同色，问几种刷法。

Onsite:
1）一堆interval，有叠加，给一个值，查询在不在这堆interval里（会调用很多次）
   Follow up， 给一个值，查询多少个interval包含这个值（会调用很多次）
  （国人大哥面的，可能会看到这个帖子，非常感谢，做题的时候给了很多引导。）
2）一个有向图，找出互相指向的点对数，（e.g. A指向B，B指向A，算一对）
   Follow up， 写一个类，这个图会变化（加点，删点，加边，删边），维护这样的
点对数。
   Follow up， 扯了扯大数据时候怎么分配到各个计算机上。
3）论文演讲
4）家族树，每个点左右指针指向自己的父亲和母亲，每个点存对应二叉堆的索引。
   A）给一个这种树，给每个点标出对应二叉堆的索引值。
   B）任意给一个节点（不需要输入根节点），输出这个点所在的层数。
   C）任意给一个节点（不需要输入根节点），输出这个点和根节点的关系（e.g. 是
根节点父亲的母亲就输出“MF”）。
5）两道LC原题 1. Anagram 2. Reverse bit
   直接给出最优解还不断让优化，优化涉及到系统设计。
http://www.mitbbs.com/article_t/JobHunting/32952717.html
电
longest increasing subsequence
Populating Next Right Pointers in Each Node （LC）

Onsite
Fraction to Recurring Decimal (LC)
Copy List with Random Pointer (LC)
Read N Characters Given Read4 (LC)
版上报过得那个由平方的最小个数的
2维空间，xy，你有很多个building，每个building有x1， x2两个值代表宽度，还有y
代表高度，很多楼可能从某个角度看过去有overlap，你要在这个2维空间画出整个的
contour
follow up: 如果x轴变为时间，y轴变为memory用量，你有一个memory的limitation，
怎么monitoring有没有超过

整体狗家不是很难，很多follow up很多。比如read4k那个，interviewer相出了无数情
况把code虐的遍体鳞伤。。。。虽然可以过LC，但是在他得test下，感觉code很crispy
。。。所以，自己不能太依赖于LC，有的时候要多想想其他corner case。非常感谢前
两轮的国人大哥，小哥。给的都是原题。

http://www.mitbbs.com/article_t/JobHunting/32043661.html
几年前人家总结的Google面经 有点长 我就不贴了 自己去看吧~
http://www.mitbbs.com/article_t/JobHunting/32662209.html
这个是一年之前人家总结的 有空看看吧~
http://www.mitbbs.com/article_t/JobHunting/32960525.html
发个新鲜面经，顺便求bless

1. 一块矩形面板上有黑点， 白点， 红点
       给一个起点，找出和这个点颜色相同，且相连的点组。 求这个点组的周长
    给一个字典，一个字符串， 找出可以由这个字串合法转成的最长单词。 转换操作
时删除一个或多个字符

2. 设计贪吃蛇
    怎么定义蛇， 怎么移动， 怎么吃， 怎么判断时候活着， 怎么定义游戏版

3. 设计售票系统， 要求
    1. 每次返回5张可选最为
    2. 保证不会给两个不同user返回同一个可选座位
    3. 用户2分钟之内，没有购买，重新开始

    moving average 
    要求， 内部用一个 固定大小数组

4. letter combination of phone number. 
    我写了递归的， 要求继续写迭代版本的。 这个在它提示下，才做出来了， 很
tricky ， 没练过

5. 一个circle 列表。Circle 有x,y,r
  1  ------------------------

0    ----------------------------
  判断是否有一条路径可以从 负无穷到正无穷。
   如果一个活多个circle完全block了通道，就没有路径


除了  letter combination of phone number. 的iterative版本 答的不好，其他的都
答的不错
求bless
http://www.mitbbs.com/article_t/JobHunting/32695723.html
周一google电面，现在还在等消息，发发面经，攒攒RP，也希望得到大家的Bless！

第一题，水题，数组加一操作，for example, 输入[2, 7, 8, 9] 数组，加一后变成 [
2, 7, 9, 0]

第二题，给定输入这样的字符串
fft, fcp, aac, act, acd, atp, tbk, tdf, …
这些都是按照字母排序好的，但是字母顺序改了，比如 f 在 a之前，t在d之前等等，
给定一些这样的rule，问怎么rebuild the alphabet?
http://www.mitbbs.com/article_t/JobHunting/32972467.html
Onsite过后google给的加面

扯背景之后面了两题：

1.add one to integer list
例如 [2， 0， 1， 5] -> [2, 0 , 1, 6]
[2， 0， 1， 9] -> [2, 0 , 2, 0]

记得处理corner case [9， 9， 9]

2.combination
给你一个list of list [[Hello, Hi], [world, girl, boy]]
print:
Hello world
Hello girl
Hello boy
Hi world
Hi girl
Hi boy

给出了recursive解法，有个地方忘写return了被指出，改正
followup： how to do it iteratively？
http://www.mitbbs.com/article_t/JobHunting/32973997.html
刚刚电面完，面试官感觉是个欧洲大叔，大叔人很好，我那题回答得是一路磕磕碰碰，
基础问题也回答得不好，大叔还是一直给提示，并且超时了还让我问问题，据说狗家很
多面试官时间一到直接挂电话。。。

题目是leetcode上BinaryTreeMaximumPathSum的变形题，path里不能有直接相接的node。
http://www.mitbbs.com/article_t/JobHunting/32924157.html
发面经攒人品
1. Google电面
女ABC
第一题是leetcode原题missing range，轻松通过
第二题类似高斯滤镜，计算矩阵平均值with a given radius
e.g. [[1,2],[3,4]] with radius 1 -> [[2.5, 2.5], [2.5, 2.5]]
给了brute force的解，然后1个月后告诉我跪了。面试官在结束以后告诉了我可以用类
似sliding window的方法优化

2. Nutanix两轮电面
第一面是个很nice的白人，扯淡10分钟然后让写了个fizzbuzz水过(不知道fizzbuzz的
朋友可以自己去google下这东西，保证你一口水喷出来)
第二面三哥，全程没做题，问我各种design problem和简历上的project，自己感觉答
的还行(三哥还很开心很满意的样子)，三天后收到模板拒信

3. WhatsApp电面
ABC小哥，上来直接让implement trie with insertion and deletion
insertion写出来了，跪在deletion。第二天收到HR拒信

4. Yelp电面
昨天刚面的，又是三哥面试官。上来先聊了半小时project和一些技术问题，比如页面
载入缓慢如何诊断之类的。剩下15分钟做题，题目是这个：
http://stackoverflow.com/questions/16927353/algorithm-for-findi
简单说就是给a list of segmentations，让你找出最大数量的non-overlapping segs
，用的是上面链接的那个算法，DP with O(n^2)。三哥没让给我写代码，就让我讲了下
算法，讲完以后三哥说这就是他想要的算法，very good, bla bla bla
但是后来我仔细找了下这题貌似有O(nlogn)的解……

5. WePay两轮电面
第一轮是个白人很nice，就让写了两题：palindrome / palindrome with anagram，轻
松水过
第二轮今天刚面完，是个很nice的abc小哥。前两题很水：reverse string / reverse 
text。第三题让你实现一个简化版的渐变色算法：给一串text，让你实现RGB (0,0,0) 
-> (255, 0, 0) -> (0, 255, 0) -> (0,0,255)的渐变效果，没什么难度但是中间因为
小哥的网络和电话信号问题中断了10几分钟，导致写这题的时候时间不够(前面这题的
spec解释了挺久，后来小哥一看时间不够就让我写简化版的了，没想到时间还是不够)
，小哥说是他的问题所以不怪我，让我面试以后自己在online notepad里写个pseudo 
code with detailed comment就行，说是因为有人会查


其他几个小公司有点记不清了。感觉那么多公司面下来Google的recruiter最nice，不
管是回邮件速度还是给feedback。
Nutanix的那个笑里藏刀的三哥让我第一次感觉到了被烙印黑是什么感觉，希望Yelp的
烙印不要再黑我了。

这次找工作经历感觉各种奇葩，遇到的算法题不是太简单就是太难，我就想安静的写一
个Merge k Sorted Lists或者LRU cache这种难度的题啊……从一月投简历开始到现在
一直在面一直在被拒，到目前为止一个onsite都没有。不过从最早的简历直接被拒到现
在的面试被拒至少有了点进步，Yelp的面试没有找内推自己直接网申也拿到了。
最后想求bless一发Yelp和WePay的onsite……当然能bless offer最好了:)
http://www.mitbbs.com/article_t/JobHunting/32978401.html
签了nda，就不细说了。我碰到的题目中等难度，和面经上挺相似，没有系统设计，
一轮存介绍phd的research。感觉有2轮答的一般。
g的流程好长啊，我是3月底面的，5月中旬才出来结果，能拿到offer，第一感觉是运气
太好了，以后要多donation攒rp。多谢中午带我吃饭和最后一轮面我的国人大哥。
onsite中的一题：打印lca的path，我开始想one pass用一个flag来标志各种情况，但
才吃完饭脑子不清楚，没写出来，最后15分钟用two pass的写了下。。
http://www.mitbbs.com/article_t/JobHunting/32979357.html
6轮， 5 coding +1 design
等了两个星期，最后还是挂了，安慰奖说可以送到 staff, engineer冻上了，本来就是
改行过来的，再改去当男秘书，PM，HR
4,5都是国人，很nice，聊了不少天
题都不难，但是做出来也未必过，recruiter 反映最后一轮design negative

1. validate parenthesis, generate all possible valid parenthesis, 只有（），
不需要用stack, 一个int count就够了
2. regular expression match，只有＊，代表任意个任何字符, 我用二维dp，面试官
好像不倾向dp, 估计recursion会讨喜点
3. max product of two string without sharing common character， 很多优化，先
写brute force，注意判断两个字符串有没有重复字符用一个26位的整数（bit map）会
优化很多
4. max number of  time range overlaps， 要求返回重叠最多的time range, (begin
, end), 比较繁琐，whiteboard都写满了，我用的两个hashmap 分别记录range开始和
结束的时间，一遍扫过去，找出最大重叠的时间段。
5. find pivot of array, the sum of elements before equals to the sum of 
elements after， 国人放水题，然后聊天
6. System design: 一个严肃的白人，不苟言笑，很少提示，问了勉强回一句，后一题
要求估算memory, disk usage.
design logging package
estimate, find the most frequency character in many short strings, in one 
big string (500mb), character are 2 byte each, in one 4GB ram, Quad core 
computer. 
最后可能一点补充： 最后一轮不能放松大意，我因为倒数第二轮老中聊天很high，拖
的比较晚，老白堵到门口，恰好自己尿急了，G家还必须面试官带着去厕所，在门口等
着，估计让他不爽了点，哎，下次记得中午少喝点水，憋尿吧， 哈哈。


我准备了好多large scale system design, 结果都没用上, logging design 我就把平
时工作上用的user case说了说，问要不要考虑distributed system的 logging, 说不
用，结果准备了一堆的karfka也吃瘪了。
http://www.mitbbs.com/article_t/JobHunting/32979389.html
题目不难， 5轮coding. 最后一轮答的不好， 大牛看看还能有offer吗。

1，4 应该是过了
2，3 过，而且很strong， 不知道能不能拿到strong hire
5 答的不好， 思路讲了， 代码没写完， 真简单，一出来就想起来，  



1。 给rotated sorted array
输出 ax^2+bx+c sorted 结果

2。 cc150 paint fill 以及小问题

3。 给weighted array， 根据weight概率随机产生 index

4。 moving window max median

5。 validate UTF8, 最后一轮， 上厕所3分钟， 前后聊天10分钟， 脑袋已经不转了
， 没答好
http://www.mitbbs.com/article_t/JobHunting/32989651.html
给一个dictionary，然后可以support的query是，给一个string，返回在
dictionary里面包含给定string的所有character的最短的string

我能想到的是把query变成sorted hash table. dictionary的words也都变成sorted 
hash table, 放在象trie一样的结构里。这样query来时可以filter字典里哪些词会
contain query.然后就得把这些candidates 都把min window算一遍。

但这样的话如果candidates多了，很贵。。。
http://www.mitbbs.com/article_t/JobHunting/33004699.html
1. 二维matrix，含0，1。  1是障碍。
  00011
  11100 
  从左上角出发到右下角， 可以往上，往下，往右移动。
  把1变成0，使得你可以从左上角到右下角。
  求最小的变化数字。

2。 两个区间，左闭右开。数字可以是整数或者浮点，
     要你判断两个区间是否相交。
     特殊例子需要你自己定义。
http://www.mitbbs.com/article_t/JobHunting/33030297.html
producer / consumer 问题， 要求threadsafe, high throughput 

class ProducerConsumer
    {
        ReaderWriterLock rwLock = new ReaderWriterLock();
        AutoResetEvent FullEvent = new AutoResetEvent ();
        AutoResetEvent EmptyEvent = new AutoResetEvent ();
        public void Producer()
        {
            rwLock.AcquireWriterLock();

            while(queue is full)
            {
                FullEvent.waitOne();
            }

            //add 

            if(Queue.count == 1)
                EmptyEvent.set();

            rwLock.ReleaseLock();
           

        }

        public void Consumer()
        {
            rwLock.AcquireReaderLock();

            while(Queue is empty)
            {
                EmptyEvent.WaitOne();
            }

            dequueue();

            if (Count == max – 1);

               FullEvent.set(); 

            rwLock.ReleaseReaderLock();
        }
http://www.mitbbs.com/article_t/JobHunting/32575573.html
今天G的电面，应该是第一轮电面吧，因为题目比较简单。。。

对面是个女的，估计是SDE,先是简单问下为啥选Google，然后是两道题

1. 大数+1
这题好常见。。。

2. 对数组排序，使得a1<=a2>=a3<=a4>=...
也是很简单的O(n)，注意写的时候不用swap元素。。。

Google doc写的，大概花了30分钟，然后问了下有什么问题。。。
http://www.mitbbs.com/article_t/JobHunting/33054861.html
给一个 n*m 的房间，房间里存在各种可能的墙，房间的格子里已经放了 e 个器材，要
求新放一个器材，放置位置距其它 e 个器材的距离最近。Breadth-first search.
http://www.mitbbs.com/article_t/JobHunting/32785665.html
面试之前在这里看了很多面经。非常感谢大家。现在贡献一下我的。顺便求一下bless
，希望能拿到心仪的offer。

new grad full time position. 一个白人小哥面的。

上来先讲了讲research。感觉就没答好。他问了一个我简历里research的一个linear 
programming的细节，但是我其实只是用了一点皮毛，对深层的原理不是很理解。结果
花了很多时间在这块还没答到重点。教训就是，不是特别在行的东西千万别放简历上。

然后就是coding，一共三题，这时候离结束就只有40分钟了，时间不怎么够。
1. 去除string中的空白
2. largest rectangle in histogram
3. 把regular expression tree 转换成表达式string
最后一题没写完就到只剩下五分钟了。小哥让我停下来跟我介绍了他的组，并且问问我
有什么问题之类。然后就结束了。题目都没答完肯定是没戏了。move on准备下一场。
祝各位找工作的都顺利！
http://www.mitbbs.com/article_t/JobHunting/33081267.html
大家好，问个Google问题，List<List<Pair>> lists，Pair有两个属性，id和String型
的value，不同lists相同id的Pair可能value不同，最后要求在所有lists都出现的id的
List<String>，相当于求intersection。所以返回类型是List<Pair<Integer, List<
String>>>，每个Pair对应id和a list of values。然后follow up是如果这个
intersection function如果call多次的话怎么优化？然后这个follow up加了额外的条
件是，有billions of lists，每次intersection求的是其中的subset的intersection
。我想到的方法是cache住已经计算过的subset的intersection，但是怎么设计key，然
后怎么通过key来lookup cache。但是感觉这个key也太难设计了，不知道大家有什么方
法？多谢啦
http://www.mitbbs.com/article_t/JobHunting/33110313.html
我来抛砖引个玉吧。是不是首先还得计算出个dp[][]数组表示i到j是不是chunked 
palindrome，后面就跟palindrome partition一样了。所以关键是如何构造那个dp[][]
也就转化为给定一个String，如何判断它是不是chunked palindrome。

boolean isChunkedPalindrome(String s) {
    int left = 0, right = s.length() - 1;
    LinkedList<Character> queue = new LinkedList<Character>();
    int[] cnt = new int[256];

    while (left < right) {
        char leftChar = s.charAt(left);
        char rightChar = s.charAt(right);
        queue.add(rightChar);
        cnt[leftChar]++;
        cnt[rightChar]--;

        if (cnt contains all zeros) {
            int temp = left;
            while (queue.size() > 0) {
                char topChar = queue.removeFirst();
                if (topChar != s.charAt(temp--)) {
                    return false;
                }
            }
        }

        left++;
        right--;
    }

    return true;
}
http://www.mitbbs.com/article_t/JobHunting/33110511.html
you have an img data as an array, output the data for upsampling. For 
example, 
[1, 2, 3, 4, 5, 6] as width 3(2 rows) ==> upsample 2 times would be [1 1 2 2
3 3 1 1 2 2 3 3 4 4 5 5 6 6 4 4 5 5 6 6]

int[] UpSampling(int[] input, int width, int times)
{
    //check the validation of input parameters
    ...
    
   int numRows = input.Length / width;
   int[] result = new int[input.Length * Math.Pow(times, 2)];
   int index = 0;

   for(int i = 0; i < numRows; i++)
   {  
      for(int j = 0; j < times; j++)
      {
          for(int k = 0; k < width; k++)
          {
              for(int l = 0; l < times; l++)
              {
                  result[index++] = input[i*width + k];
              }
           }
    }
}

return result;
}

我这个算法用了4 个 loop, 看起来有点笨， 不过performance还是o(n). 和面试官讨
论，他没有反对，不过最后估计还是挂在了这个题上

大家有没有更好的办法？
