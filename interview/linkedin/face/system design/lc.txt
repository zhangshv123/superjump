1.设计linkedin Ads. 每个user有一些attributes. 比如什么专业，什么level。每个广告有其针对的attribute。比如广告a针对level 4以上的software engineer。设计系统当user登陆时根据他的attributes推送相应广告。基本就是一个inverted index就搞定了，然后又聊了一些优化和follow up。

2.system design. tiny url.

3. Design， 生产者消费者模型的变种，要熟悉条件变量，回答的不好，忘记pthread_cond_wait()内部的一些机制了，讨论许久才想起来，

4.Design，Key Value Store，限制是底层的文件系统是append only

5.Design，top k shared article，按照top k XXX 标准做法回答就好了

6.Design Key Value Store， 文件系统是类似 HDFS 一样的

7.Design Monitoring System，比如每台机器的CPU pct，要求支持UI 和alert

8.设计系统查询A和B 是否为1度好友，2度好友和3度好友

9.top 500 exception in 1 hr
聊了很多如何节省空间方面的东西。基本按照标准流程走了一次。follow up 超多问题。

10.题目是统计过去5min, 1h, 24h的前k个分享最多的资源。这一轮我理解应该有一些鸭梨测试的意思，因为大哥一直不断地打岔打击，中间还经常说类似“我说，你最起码说出点东西让我能往面试报告上写了交差吧？”的话
从算法上其实基本就是桶排序，例如以20s为一个桶。在统计上我试着讲我在板上看到别的大神说过的“lossy counting”和“sticky sampling”，均被大哥否掉了。到这里他直接坐不住了到白板面前说“行了你说了这么多没用的快没时间了，是有一部分是对的。让我给你节省点时间，是这样这样这样。。你趁还有时间赶紧讲讲系统架构吧。”我就试着把load balancer， master-slave这些东西开始讲，他慢慢地从之前的心不在焉变得稍微有点认真听了。但是我从他第一次打击我就知道今天这些面试肯定没戏了，倒是越来越放松，就把知道的东西都摆出来，尽力而为就算了。


